<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>